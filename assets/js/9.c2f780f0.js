(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{329:function(t,_,v){"use strict";v.r(_);var a=v(3),s=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"单一入口"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单一入口"}},[t._v("#")]),t._v(" 单一入口")]),t._v(" "),_("p",[_("code",[t._v("CleanPHP")]),t._v("是基于单一入口的开发思想，所有的请求都交由"),_("code",[t._v("src/public/index.php")]),t._v("来处理。")]),t._v(" "),_("p",[_("strong",[t._v("典型的访问链接：")])]),t._v(" "),_("p",[t._v("已配置伪静态的情况："),_("code",[t._v("http://serverName/模块/控制器/操作?参数=值...")])]),t._v(" "),_("p",[t._v("没有配置伪静态的情况： "),_("code",[t._v("http://serverName/?m=模块&c=控制器&a=操作&参数=值...")])]),t._v(" "),_("h2",{attrs:{id:"开发模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#开发模式"}},[t._v("#")]),t._v(" 开发模式")]),t._v(" "),_("p",[t._v("众所周知，Web两大开发模式："),_("code",[t._v("MVC")]),t._v("和"),_("code",[t._v("前后端分离")])]),t._v(" "),_("p",[_("code",[t._v("MVC")]),t._v("专注于全栈开发，写后端代码的同时，写前端代码。")]),t._v(" "),_("p",[_("code",[t._v("前后端分离")]),t._v("专注于专业的人干专业的事，后端开发只负责写接口，前端开发只负责页面渲染，两者之间通过接口调用实现连接。")]),t._v(" "),_("p",[_("code",[t._v("CleanPHP")]),t._v(" 采用两个模式开发，以满足不同的需求。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("MVC模式")]),t._v(" "),_("p",[t._v("MVC 模式代表 Model-View-Controller（模型-视图-控制器） 模式。")]),t._v(" "),_("p",[t._v("简单来讲，模型处理数据，视图渲染数据，控制器处理输入输出。")])]),t._v(" "),_("p",[_("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/dreamncn/picBed@master/uPic/2022_05_05_23_50_46_1651765846_1651765846077_qfu0RU.jpg",alt:""}})]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("API模式")]),t._v(" "),_("p",[t._v("API 模式，"),_("code",[t._v("CleanPHP")]),t._v("的API模式基本是遵循MVC思想，唯一不同的地方在于视图渲染，从动态渲染Html改成了动态输出接口。")])]),t._v(" "),_("h2",{attrs:{id:"模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),_("p",[t._v("一个典型的应用是由多个模块组成的，这些模块通常都是"),_("code",[t._v("src/controller")]),t._v("下面的一个子目录。")]),t._v(" "),_("h2",{attrs:{id:"控制器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#控制器"}},[t._v("#")]),t._v(" 控制器")]),t._v(" "),_("p",[t._v("每个控制器其实就是一个独立的控制器类。")]),t._v(" "),_("p",[t._v("控制器主要负责请求的接收，并调用相关的模型处理，并最终通过视图输出。")]),t._v(" "),_("h2",{attrs:{id:"操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),_("p",[t._v("一个控制器包含多个操作（方法），操作方法是一个URL访问的"),_("strong",[t._v("最小单元")]),t._v("。")]),t._v(" "),_("h2",{attrs:{id:"模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模型"}},[t._v("#")]),t._v(" 模型")]),t._v(" "),_("p",[t._v("模型类通常完成实际的业务逻辑和数据封装，并返回数据。")]),t._v(" "),_("h2",{attrs:{id:"视图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),_("p",[t._v("控制器调用模型类后返回的数据通过视图组装成不同格式的输出。")]),t._v(" "),_("p",[t._v("视图根据不同的需求，来决定调用模板引擎进行内容解析后输出还是直接输出。")]),t._v(" "),_("p",[t._v("视图通常会有一系列的模板文件对应不同的控制器和操作方法。")]),t._v(" "),_("h2",{attrs:{id:"命名空间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[t._v("#")]),t._v(" 命名空间")]),t._v(" "),_("p",[_("code",[t._v("CleanPHP")]),t._v("采用了"),_("code",[t._v("PHP")]),t._v("的命名空间进行类库文件的设计和规划，并且符合"),_("code",[t._v("PSR-4")]),t._v("的自动加载规范。")])])}),[],!1,null,null,null);_.default=s.exports}}]);